syntax = "proto3";

package assessment;

service AssessmentService {
  rpc GetAssessmentByInsuranceNumber(GetAssessmentByInsuranceNumberRequest) returns (GetAssessmentByInsuranceNumberResponse);
  rpc CreateAssessment(CreateAssessmentRequest) returns (CreateAssessmentResponse);
}

// GetAssessmentByInsuranceNumberのリクエストメッセージ
message GetAssessmentByInsuranceNumberRequest {
  string insuranceNumber = 1; // 被保険者番号
}

// GetAssessmentByInsuranceNumberのレスポンスメッセージ
message GetAssessmentByInsuranceNumberResponse {
  User user = 1;
  EmergencyContact emergencyContact = 2;
  Consulter consulter = 3;
  Family family = 4;
  Home home = 5;
  Room room = 6;
  Movement movement = 7;
  Equipment equipment = 8;
  Toilet toilet = 9;
  Bathroom bathroom = 10;
}

// CreateAssessmentのリクエストメッセージ
message CreateAssessmentRequest {
  User user = 1;
  Service service = 2;
}

// CreateAssessmentのレスポンスメッセージ
message CreateAssessmentResponse {
  User user = 1;
  Service service = 2;
}

// Userメッセージ
message User {
  int32 id = 1;
  int32 insuredId = 2;
  string name = 3;
  string telephoneNumber = 4;
  string mobileNumber = 5;
  int32 age = 6;
  bool sex = 7;
  string address = 8;
  string requestedDate = 9;
  int32 emergencyId = 10;
  int32 consulterId = 11;
  Bathroom bathroom = 12;
  Equipment equipment = 13;
  Family family = 14;
  Home home = 15;
  Movement movement = 16;
  Room room = 17;
  Toilet toilet = 18;
  Consulter consulter = 19;
  EmergencyContact emergencyContact = 20;
}

// EmergencyContactメッセージ
message EmergencyContact {
  int32 id = 1;
  string name = 2;
  int32 age = 3;
  bool sex = 4;
  string telephoneNumber = 5;
  string mobileNumber = 6;
  string address = 7;
  string relationship = 8;
}

// Consulterメッセージ
message Consulter {
  int32 id = 1;
  string name = 2;
  int32 age = 3;
  bool sex = 4;
  string telephoneNumber = 5;
  string mobileNumber = 6;
  string address = 7;
  string relationship = 8;
}

// Familyメッセージ
message Family {
  int32 id = 1;
  int32 userId = 2;
  int32 familyId = 3;
  string name = 4;
  string relationship = 5;
  string livingSeparately = 6;
  string employment = 7;
  string condition = 8;
  string memo = 9;
}

// Homeメッセージ
message Home {
  int32 id = 1;
  int32 userId = 2;
  string style = 3;
  string memo = 4;
}

// Roomメッセージ
message Room {
  int32 id = 1;
  int32 userId = 2;
  bool myRoom = 3;
  int32 floor = 4;
  bool elevator = 5;
  string bed = 6;
  string electricBed = 7;
  bool sunshine = 8;
  bool heater = 9;
  bool cooler = 10;
}

// Movementメッセージ
message Movement {
  int32 id = 1;
  int32 userId = 2;
  bool assistiveTechnology = 3;
  bool wheelchair = 4;
  bool electricWheelchair = 5;
  bool stick = 6;
  bool walker = 7;
  string other = 8;
  bool indoor = 9;
}

// Equipmentメッセージ
message Equipment {
  int32 id = 1;
  int32 userId = 2;
  bool cooktop = 3;
  string heater = 4;
}

// Toiletメッセージ
message Toilet {
  int32 id = 1;
  int32 userId = 2;
  string style = 3;
  bool handrail = 4;
  bool step = 5;
}

// Bathroomメッセージ
message Bathroom {
  int32 id = 1;
  int32 userId = 2;
  bool existence = 3;
  bool handrail = 4;
  bool step = 5;
}

// Serviceメッセージ
message Service {
  int32 id = 1;
  int32 insuredId = 2;
  string name = 3;
  string date = 4;
  AtHome athome = 5;
  DailyLifeIndependenceLevel dailylifeindependenceLevel = 6;
  DisabilityNotebook disabilitynotebook = 7;
  Eligibility eligibility = 8;
  IndependenceSupportMedicalExpenses independencesupportmedicalexpenses = 9;
  MentalDisabilityCertificate mentaldisabilitycertificate = 10;
  SpecialEducationRecordBook specialeducationrecordbook = 11;
  Using using = 12;
  Wants wants = 13;
}

// Usingメッセージ
message Using {
  int32 id = 1;
  int32 userId = 2;
  string detail = 3;
  string provider = 4;
  string memo = 5;
}

// Wantsメッセージ
message Wants {
  int32 id = 1;
  int32 userId = 2;
  string detail = 3;
  string provider = 4;
  string memo = 5;
}

// Eligibilityメッセージ
message Eligibility {
  int32 id = 1;
  int32 serviceId = 2;
  string type = 3;
  bool done = 4;
  Level level = 5;
  string date = 6;
}

// DisabilityNotebookメッセージ
message DisabilityNotebook {
  int32 id = 1;
  int32 userId = 2;
  bool possess = 3;
  int32 grade = 4;
  string date = 5;
}

// SpecialEducationRecordBookメッセージ
message SpecialEducationRecordBook {
  int32 id = 1;
  int32 userId = 2;
  bool possess = 3;
  int32 grade = 4;
  string date = 5;
}

// MentalDisabilityCertificateメッセージ
message MentalDisabilityCertificate {
  int32 id = 1;
  int32 userId = 2;
  bool possess = 3;
  int32 grade = 4;
  string date = 5;
}

// IndependenceSupportMedicalExpensesメッセージ
message IndependenceSupportMedicalExpenses {
  int32 id = 1;
  int32 userId = 2;
  bool possess = 3;
  int32 grade = 4;
}

// DailyLifeIndependenceLevelメッセージ
message DailyLifeIndependenceLevel {
  int32 id = 1;
  int32 userId = 2;
  string disabledElderly = 3;
  string dementia = 4;
}

// AtHomeメッセージ
message AtHome {
  int32 id = 1;
  int32 userId = 2;
  string menu = 3;
  string date = 4;
}

// Level enum
enum Level {
  VALUE1 = 0;
  VALUE2 = 1;
  VALUE3 = 2;
  VALUE4 = 3;
  VALUE5 = 4;
}

// Tooth enum
enum Tooth {
  HAS = 0;
  NO = 1;
  FULL_DENTURES = 2;
  PARTIAL_DENTURES = 3;
}