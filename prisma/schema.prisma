// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  insuredId Int @id @default(autoincrement())
  name  　　　　　　String
  telephonenumber Int 
  mobilenumbeer   Int 
  age             Int
  sex             Boolean
  adress          String
  Requesteddate   DateTime
  emergencycontact　Emergencycontact　@relation(fields: [emergencyId], references: [emergencyId])
  emergencyId     Int @unique
  consulter        Consulter　@relation(fields: [consulterId], references: [consulterId])
  consulterId     Int @unique
  familly Families? 
  home Home?   
  room Room? 
  movement Movement? 
  equipment Equipment?
  toilet Toilet?
  bathroom Bathroom?
}

model Emergencycontact {
  emergencyId     Int   @id 
  name  　　　　　　String
  age             Int
  sex             Boolean
  telephonenumber Int
  mobilenumbeer   Int 
  adress          String
  relationship    String
  user User[]
}

model Consulter {
  consulterId     Int      @id
  name  　　　　　　String
  age             Int
  sex             Boolean
  telephonenumber Int
  mobilenumbeer   Int 
  adress          String
  relationship    String
  user User[]
}


model Families {
  familyId     Int  @unique
  name           String
  relationship　 String
  livingseparately String
  employment　String
  condition String
  memo  String
  user User  @relation(fields: [userId], references: [insuredId])
  userId Int @unique
  @@id([userId, familyId])
}

model Home {
  homeId Int @unique
  style     String
  memo      String
  user User @relation(fields: [userId], references: [insuredId])
  userId Int @unique
  @@id([userId, homeId])
}

model Room {
  user User @relation(fields: [userId], references: [insuredId])
  userId Int @id @unique
  myroom  Boolean
  floor   Int
  elevator　Boolean
  bed String
  electricbed　String
  sunshine　Boolean
  heater Boolean
  cooler Boolean
}

model Movement {
  user User @relation(fields: [userId], references: [insuredId])
  userId Int @id @unique
  assistivetechnology Boolean
  wheelchair Boolean
  electricwheelchair Boolean
  stick Boolean
  walker　Boolean
  else String?
  indoor Boolean
}

model Equipment {
  user User @relation(fields: [userId], references: [insuredId])
  userId Int @id @unique
  cooktop Boolean
  heater  String
}

model Toilet {
  user User @relation(fields: [userId], references: [insuredId])
  userId   Int  @id @unique
  style    String
  handrail Boolean
  step     Boolean
}

model Bathroom {
  user User @relation(fields: [userId], references: [insuredId])
  userId          Int  @id @unique
  existence Boolean
  handrail  Boolean
  step      Boolean
}

